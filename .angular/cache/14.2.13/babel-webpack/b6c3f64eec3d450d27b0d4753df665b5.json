{"ast":null,"code":"import { FormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\n\nfunction LoginComponent_p_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 21);\n    i0.ɵɵtext(1, \"Invalid \");\n    i0.ɵɵelementStart(2, \"b\");\n    i0.ɵɵtext(3, \" Credentials!\");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nfunction LoginComponent_p_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 21);\n    i0.ɵɵtext(1, \"Enter both \");\n    i0.ɵɵelementStart(2, \"b\");\n    i0.ɵɵtext(3, \"Username\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \" and \");\n    i0.ɵɵelementStart(5, \"b\");\n    i0.ɵɵtext(6, \"Password\");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nconst _c0 = function (a0) {\n  return {\n    \"warningOutline\": a0\n  };\n};\n\nexport let LoginComponent = /*#__PURE__*/(() => {\n  class LoginComponent {\n    constructor(formBuilder, router) {\n      this.router = router;\n      this.emailValid = false;\n      this.nullValueErrorMessage = false;\n      this.invalid = false;\n      this.myFormGroup = formBuilder.group({\n        \"email\": new FormControl(\"\", [Validators.required, Validators.email]),\n        \"password\": new FormControl(\"\", [Validators.required])\n      });\n    }\n\n    emailValidation(email) {\n      if (/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(email.value)) {\n        this.emailValid = false;\n        console.log(this.emailValid);\n      } else {\n        this.emailValid = true;\n        console.log(this.emailValid);\n      }\n\n      if (email.value.length == 0) {\n        this.emailValid = false;\n      } else {\n        this.nullValueErrorMessage = false;\n      }\n    }\n\n    passwordEmpty() {\n      if (this.myFormGroup.controls['password'].value.length != 0) {\n        this.nullValueErrorMessage = false;\n      } else {\n        this.nullValueErrorMessage = true;\n      }\n    }\n\n    login() {\n      // if (this.myFormGroup.controls['email'].value.length != 0 && this.myFormGroup.controls['password'].value.length != 0) {\n      //   // let userCredentials = new AuthenticationRequest(this.myFormGroup.controls['email'].value, this.myFormGroup.controls['password'].value)\n      //   this.loginService.login(userCredentials).subscribe((successData) => {\n      //     sessionStorage.setItem(\"user\", userCredentials.username);\n      //     sessionStorage.setItem(\"firstName\", successData.firstName);\n      //     sessionStorage.setItem(\"lastName\", successData.lastName);\n      //     sessionStorage.setItem(\"id\",successData.id)\n      //     this.router.navigate(['/home']);\n      //     console.log(successData)\n      //   }, failureData => {\n      //     console.log(\"fail\");\n      //     this.invalid = true;\n      //     console.log(failureData);\n      //   })\n      //   this.nullValueErrorMessage = false;\n      // }\n      // else {\n      //   this.nullValueErrorMessage = true;\n      // }\n      this.router.navigate(['/form-data']);\n    }\n\n    ngOnInit() {}\n\n  }\n\n  LoginComponent.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Router));\n  };\n\n  LoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 30,\n    vars: 8,\n    consts: [[\"rel\", \"stylesheet\", \"href\", \"https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css\"], [1, \"\", 2, \"margin-top\", \"10%\"], [1, \"card\", \"bg-dark\", \"text-white\", \"card0\", \"border-0\"], [1, \"row\", \"content\", \"d-flex\"], [1, \"col-lg-3\"], [1, \"col-lg-6\"], [1, \"\"], [1, \"row\", \"mb-4\", \"px-3\"], [1, \"mb-0\", \"mr-4\", \"mt-2\"], [1, \"text-center\"], [\"style\", \"color: red; text-transform: capitalize;font-size: 14px;letter-spacing: 1px\", 4, \"ngIf\"], [1, \"formgroup\", 3, \"formGroup\", \"ngSubmit\"], [1, \"row\", \"px-3\"], [1, \"mb-1\"], [1, \"mb-0\", \"text-sm\"], [\"type\", \"text\", \"name\", \"email\", \"placeholder\", \"Enter a valid Username\", 1, \"mb-4\", \"form-control\", 3, \"formControl\", \"ngClass\", \"keyup\"], [\"email\", \"\"], [\"type\", \"password\", \"name\", \"password\", \"placeholder\", \"Enter password\", 1, \"form-control\", 3, \"formControl\", \"keyup\"], [\"password\", \"\"], [2, \"margin-top\", \"2%\", \"margin-bottom\", \"5%\"], [\"type\", \"submit\", 1, \"btn\", \"btn-light\", \"text-center\"], [2, \"color\", \"red\", \"text-transform\", \"capitalize\", \"font-size\", \"14px\", \"letter-spacing\", \"1px\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r4 = i0.ɵɵgetCurrentView();\n\n        i0.ɵɵelementStart(0, \"head\");\n        i0.ɵɵelement(1, \"link\", 0);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"div\", 1)(3, \"div\", 2)(4, \"div\", 3);\n        i0.ɵɵelement(5, \"div\", 4);\n        i0.ɵɵelementStart(6, \"div\", 5)(7, \"div\", 6)(8, \"div\", 7)(9, \"h2\", 8);\n        i0.ɵɵtext(10, \"Login \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(11, \"div\", 9);\n        i0.ɵɵtemplate(12, LoginComponent_p_12_Template, 4, 0, \"p\", 10);\n        i0.ɵɵtemplate(13, LoginComponent_p_13_Template, 7, 0, \"p\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"form\", 11);\n        i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_14_listener() {\n          return ctx.login();\n        });\n        i0.ɵɵelementStart(15, \"div\", 12)(16, \"label\", 13)(17, \"h6\", 14);\n        i0.ɵɵtext(18, \"Email Address\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(19, \"input\", 15, 16);\n        i0.ɵɵlistener(\"keyup\", function LoginComponent_Template_input_keyup_19_listener() {\n          i0.ɵɵrestoreView(_r4);\n\n          const _r2 = i0.ɵɵreference(20);\n\n          return i0.ɵɵresetView(ctx.emailValidation(_r2));\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(21, \"div\", 12)(22, \"label\", 13)(23, \"h6\", 14);\n        i0.ɵɵtext(24, \"Password\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(25, \"input\", 17, 18);\n        i0.ɵɵlistener(\"keyup\", function LoginComponent_Template_input_keyup_25_listener() {\n          return ctx.passwordEmpty();\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(27, \"div\", 19)(28, \"button\", 20);\n        i0.ɵɵtext(29, \"Login\");\n        i0.ɵɵelementEnd()()()()()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(12);\n        i0.ɵɵproperty(\"ngIf\", ctx.invalid);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.nullValueErrorMessage);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.myFormGroup);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"formControl\", ctx.myFormGroup.controls[\"email\"])(\"ngClass\", i0.ɵɵpureFunction1(6, _c0, ctx.emailValid));\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"formControl\", ctx.myFormGroup.controls[\"password\"]);\n      }\n    },\n    styles: [\".content[_ngcontent-%COMP%]{padding-top:60px}.card0[_ngcontent-%COMP%]{border-radius:0;overflow:hidden}.card2[_ngcontent-%COMP%]{margin:0px 40px,}.text-sm[_ngcontent-%COMP%]{font-size:14px!important}[_ngcontent-%COMP%]::placeholder{color:#bdbdbd;opacity:1;font-weight:300}[_ngcontent-%COMP%]:-ms-input-placeholder{color:#bdbdbd;font-weight:300}[_ngcontent-%COMP%]::-ms-input-placeholder{color:#bdbdbd;font-weight:300}.forgot[_ngcontent-%COMP%]:hover{color:red}input[_ngcontent-%COMP%], textarea[_ngcontent-%COMP%]{padding:10px 12px;border:1px solid lightgrey;border-radius:2px;margin-bottom:5px;margin-top:2px;width:100%;box-sizing:border-box;color:#2c3e50;font-size:14px;letter-spacing:1px}input[_ngcontent-%COMP%]:focus, textarea[_ngcontent-%COMP%]:focus{box-shadow:none!important;border:1px solid #304FFE;outline-width:0}button[_ngcontent-%COMP%]:focus{box-shadow:none!important;outline-width:0}a[_ngcontent-%COMP%]{color:inherit;cursor:pointer}.btn-blue[_ngcontent-%COMP%]{background-color:#1a237e;width:150px;color:#fff;border-radius:2px}.btn-blue[_ngcontent-%COMP%]:hover{background-color:#000;cursor:pointer}.bg-blue[_ngcontent-%COMP%]{color:#fff;background-color:#1a237e}@media screen and (max-width: 991px){.border-line[_ngcontent-%COMP%]{border-right:none}.card2[_ngcontent-%COMP%]{border-top:1px solid #EEEEEE!important;margin:0 15px}}.cts[_ngcontent-%COMP%]:hover{color:#adff2f;text-decoration:none}.github[_ngcontent-%COMP%]:hover{color:#adff2f}.warningOutline[_ngcontent-%COMP%]:focus{border:1px solid #fe3030;outline-width:0}.footer[_ngcontent-%COMP%]{position:fixed;left:0;bottom:0;width:100%;z-index:1;color:#fff;text-align:center}\"]\n  });\n  return LoginComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}