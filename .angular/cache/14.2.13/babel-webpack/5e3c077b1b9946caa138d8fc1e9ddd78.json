{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nimport { Component } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nimport { AddInvoiceRequest } from '../model/add-invoice-request.model';\nimport { MatTableDataSource } from '@angular/material/table';\nlet AddInvoiceComponent = class AddInvoiceComponent {\n  constructor(formbuilder, productService) {\n    this.productService = productService;\n    this.displayedColumns = ['invoiceId', 'invoiceDate', 'vendorName', 'brandName', 'productName', 'productSize', 'productQuantity', 'expirationDate'];\n    this.invoiceID = null;\n    this.showProducts = false;\n    this.myFormGroup = formbuilder.group({\n      \"invoiceId\": new FormControl(\"\", [Validators.required]),\n      \"invoiceDate\": new FormControl(\"\", [Validators.required]),\n      \"vendorName\": new FormControl(\"\", [Validators.required]),\n      \"brandName\": new FormControl(\"\", [Validators.required]),\n      \"productName\": new FormControl(\"\", [Validators.required]),\n      \"size\": new FormControl(\"\", [Validators.required]),\n      \"quantity\": new FormControl(\"\", [Validators.required]),\n      \"expiryDate\": new FormControl(\"\", [Validators.required])\n    }); // if(this.showProducts && this.invoiceID != null && this.invoiceID.length != 0){\n    //   productService.getProductDetailsFromInvoiceId(this.invoiceID).subscribe(response =>{\n    //     this.productsResponse = response;\n    //   });\n    // }\n  }\n\n  ngOnInit() {}\n\n  save(status) {\n    if (this.myFormGroup.controls['invoiceId'].value.length != 0 && this.myFormGroup.controls['invoiceDate'].value.length != 0 && this.myFormGroup.controls['vendorName'].value.length != 0 && this.myFormGroup.controls['brandName'].value.length != 0 && this.myFormGroup.controls['productName'].value.length != 0 && this.myFormGroup.controls['size'].value.length != 0 && this.myFormGroup.controls['quantity'].value.length != 0 && this.myFormGroup.controls['expiryDate'].value.length != 0) {\n      let user = new AddInvoiceRequest(this.myFormGroup.controls['invoiceId'].value, this.myFormGroup.controls['invoiceDate'].value, this.myFormGroup.controls['vendorName'].value, this.myFormGroup.controls['brandName'].value, this.myFormGroup.controls['productName'].value, this.myFormGroup.controls['size'].value, this.myFormGroup.controls['quantity'].value, this.myFormGroup.controls['expiryDate'].value, status);\n      this.productService.add(user).subscribe(response => {\n        console.log(response);\n\n        if (status == 'OPEN') {\n          this.productsResponse = response;\n          this.dataSource = new MatTableDataSource(this.productsResponse.productList);\n          this.invoiceID = this.myFormGroup.controls['invoiceId'].value;\n          this.showProducts = true;\n        } else if (status == 'CLOSE') {\n          this.invoiceID == null;\n          this.showProducts = false;\n        }\n\n        this.myFormGroup.controls['invoiceId'].reset();\n        this.myFormGroup.controls['invoiceDate'].reset();\n        this.myFormGroup.controls['vendorName'].reset();\n        this.myFormGroup.controls['brandName'].reset();\n        this.myFormGroup.controls['productName'].reset();\n        this.myFormGroup.controls['size'].reset();\n        this.myFormGroup.controls['quantity'].reset();\n        this.myFormGroup.controls['expiryDate'].reset();\n        setTimeout(function () {\n          console.log('hide');\n          this.showElement = false;\n        }.bind(this), 3000);\n      }, // failure function\n      failureData => {\n        console.log(failureData);\n        setTimeout(function () {\n          console.log('hide');\n        }.bind(this), 3000);\n      });\n    }\n  }\n\n  makeDefault(value) {}\n\n};\nAddInvoiceComponent = __decorate([Component({\n  selector: 'app-add-invoice',\n  templateUrl: './add-invoice.component.html',\n  styleUrls: ['./add-invoice.component.css']\n})], AddInvoiceComponent);\nexport { AddInvoiceComponent };","map":null,"metadata":{},"sourceType":"module"}